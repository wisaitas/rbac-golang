version: "3.9"

services:
  auth-service:
    build:
      context: .
      dockerfile: deployment/docker-images/auth-service/api.Dockerfile
    container_name: rbac-golang-auth-service
    ports:
      - 8082:8082
    env_file:
      - deployment/env/api.env
    depends_on:
      auth-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s

  auth-db:
    build:
      context: .
      dockerfile: deployment/docker-images/auth-db/postgres.Dockerfile
    container_name: rbac-golang-auth-db
    ports:
      - 8080:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.4.1-alpine
    container_name: rbac-golang-redis
    ports:
      - 8081:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  redis-data:
